---
//icons imports
import {
  Mail,
  PhoneCall,
  ChevronDown,
  CircleUserRound,
  Heart,
  Search,
  ShoppingCart,
} from "@lucide/astro";

//astro components imports
import {
  Dropdown,
  DropdownTrigger,
  DropdownContent,
  DropdownItem,
  DropdownLabel,
  DropdownSeparator,
} from "@/starwind/dropdown";

import PageFindSearch from "./blocks/PageFindSearch.astro";
//navigation items
const navItems = [
  {
    name: "Home",
    url: "/",
  },
  {
    name: "Pages",
    url: "/pages",
    subItems: [
      { name: "Services", url: "/pages/services" },
      { name: "Features", url: "/pages/features" },
      { name: "About", url: "/pages/about" },
      { name: "Team", url: "/pages/team" },
      { name: "Careers", url: "/pages/careers" },
      { name: "FAQ", url: "/pages/faq" },
    ],
  },
  {
    name: "Products",
    url: "/products",
    subItems: [
      { name: "Grid", url: "/products/grid" },
      { name: "List", url: "/products/list" },
    ],
  },
  {
    name: "Blog",
    url: "/blog",
  },
  {
    name: "Shop",
    url: "/shop",
  },
  {
    name: "Contact",
    url: "/contact",
  },
];

const currency = [
  {
    name: "USD",
  },
  {
    name: "SAR",
  },
  {
    name: "INR",
  },
];

const lang = [
  {
    name: "English",
  },
  {
    name: "Arabic",
  },
];
---

<!-- START - Header -->
<header>
  <!-- start - top header -->
  <div class="bg-brand-700 py-4">
    <div class="xl:container px-6 mx-auto">
      <div class="flex justify-between">
        <!-- start | left list -->
        <nav>
          <ul class="flex gap-12 font-medium">
            <li class="inline-flex">
              <a
                href="mailto: contact@hekto.com"
                class="text-white inline-flex gap-2 items-center"
              >
                <Mail class="size-5" />
                <span>contact@hekto.com</span>
              </a>
            </li>
            <li class="inline-flex">
              <a
                href="tel: (12345)67890"
                class="text-white inline-flex gap-2 items-center"
              >
                <PhoneCall class="size-5" />
                <span>(12345)67890</span>
              </a>
            </li>
          </ul>
        </nav>
        <!-- end | left list -->

        <!-- start | right list -->
        <nav>
          <ul class="flex gap-5 font-medium">
            <!-- Component: Basic dropdown menu -->
            <li class="relative inline-flex" x-data="{open: false}">
              <!--  Start Dropdown trigger -->
              <a
                href="javascript:void(0)"
                x-on:click="open = ! open"
                x-on:click.outside="open = false"
                class="inline-flex items-center justify-center gap-1 tracking-wide text-white focus-visible:outline-none whitespace-nowrap disabled:cursor-not-allowed disabled:border-emerald-300 disabled:bg-emerald-300 disabled:shadow-none"
              >
                <span class="lead">English</span>
                <span class="relative only:-mx-5">
                  <ChevronDown class="size-5" />
                </span>
              </a>
              <!--  End Dropdown trigger -->
              <!-- Start Menu list -->
              <ul
                x-bind:class="! open ? 'hidden' : ''"
                class="absolute z-20 flex flex-col py-2 mt-1 list-none bg-white rounded shadow-md top-full shadow-slate-500/10"
              >
                {
                  lang.map((item) => (
                    <li>
                      <a
                        class="flex items-start justify-start gap-2 p-2 px-5 transition-colors duration-300 hover:text-brand-500 focus:bg-brand-500/50 focus:text-brand-500 focus:outline-none focus-visible:outline-none"
                        href="#"
                      >
                        <span class="leading-5 truncate">{item.name}</span>
                      </a>
                    </li>
                  ))
                }
              </ul>
              <!-- End Menu list -->
            </li>
            <!-- End Basic dropdown menu-->
            <!-- Component: Basic dropdown menu -->
            <li class="relative inline-flex" x-data="{open: false}">
              <!--  Start Dropdown trigger -->
              <a
                href="javascript:void(0)"
                x-on:click="open = ! open"
                x-on:click.outside="open = false"
                class="inline-flex items-center justify-center gap-1 tracking-wide text-white focus-visible:outline-none whitespace-nowrap disabled:cursor-not-allowed disabled:border-emerald-300 disabled:bg-emerald-300 disabled:shadow-none"
              >
                <span>USD</span>
                <span class="relative only:-mx-5">
                  <ChevronDown class="size-5" />
                </span>
              </a>
              <!--  End Dropdown trigger -->
              <!-- Start Menu list -->
              <ul
                x-bind:class="! open ? 'hidden' : ''"
                class="absolute z-20 flex flex-col py-2 mt-1 list-none bg-white rounded shadow-md top-full shadow-slate-500/10"
              >
                {
                  currency.map((item) => (
                    <li>
                      <a
                        class="flex items-start justify-start gap-2 p-2 px-5 transition-colors duration-300 hover:text-brand-500 focus:bg-brand-500/50 focus:text-brand-500 focus:outline-none focus-visible:outline-none"
                        href="#"
                      >
                        <span class="leading-5 truncate">{item.name}</span>
                      </a>
                    </li>
                  ))
                }
              </ul>
              <!-- End Menu list -->
            </li>
            <!-- End Basic dropdown menu-->
            <li class="inline-flex">
              <a
                href="#"
                class="text-white font-medium inline-flex gap-2 items-center"
              >
                <span>Login</span>
                <CircleUserRound class="size-5" />
              </a>
            </li>
            <li class="inline-flex">
              <a
                href="#"
                class="text-white font-medium inline-flex gap-2 items-center"
              >
                <span>Wishlist</span>
                <Heart class="size-5" />
              </a>
            </li>
            <li class="inline-flex">
              <a
                href="/checkout"
                class="text-white font-medium inline-flex gap-2 items-center"
              >
                <span>Cart</span>
                <span
                  class="inline-flex items-center text-xs justify-center w-5 h-5 bg-primary-500 text-white rounded-full"
                  id="cartCount"
                >
                </span>
                <ShoppingCart class="size-5" />
              </a>
            </li>
          </ul>
        </nav>
        <!-- start | right list -->
      </div>
    </div>
  </div>
  <!-- end - top header -->

  <!-- start - main header -->
  <div class="py-5">
    <div class="xl:container px-6 mx-auto">
      <div class="flex items-center">
        <a href="/" class="text-4xl font-heading font-bold text-black">Hekto</a>
        <nav class="ml-20">
          <ul class="flex items-center gap-9 font-medium">
            {
              navItems.map((item) =>
                item.subItems ? (
                  <li class="relative inline-flex" x-data="{open: false}">
                    <a
                      href="javascript:void(0)"
                      class="text-ghost-950 transition-colors duration-300 hover:text-primary-500 focus:text-brand-400 inline-flex items-center gap-1"
                      x-on:click="open = ! open"
                      x-on:keydown.escape.window="open = false"
                      x-on:click.outside="open = false"
                    >
                      {item.name}
                      <ChevronDown class="size-5" />
                    </a>
                    <ul
                      class="absolute left-0 top-full mt-2 min-w-[180px] bg-white rounded shadow-md z-20"
                      x-bind:class="! open ? 'hidden' : ''"
                      x-transition:enter="transition ease-out duration-200"
                      x-transition:enter-start="opacity-0"
                    >
                      {item.subItems.map((sub) => (
                        <li>
                          <a
                            href={sub.url}
                            class="block px-5 py-2 text-ghost-950 hover:text-primary-500 hover:bg-slate-50 transition-colors duration-300"
                          >
                            {sub.name}
                          </a>
                        </li>
                      ))}
                    </ul>
                  </li>
                ) : (
                  <li class="inline-flex">
                    <a
                      href={item.url}
                      class="text-ghost-950 transition-colors duration-300 hover:text-primary-500 focus:text-brand-400"
                    >
                      {item.name}
                    </a>
                  </li>
                )
              )
            }
          </ul>
        </nav>
        <!-- <PageFindSearch class="ml-20" /> -->
        <form action="" class="flex ml-auto">
          <label for="search" class="sr-only">Enter keywords to search</label>
          <input
            type="text"
            class="form-input border border-slate-200 rounded-s-sm px-4 py-3"
            placeholder="Search"
            id="search"
          />
          <button
            type="button"
            class="inline-block bg-primary-500 py-2 px-4 text-white"
          >
            <Search class="size-6" />
          </button>
        </form>
      </div>
    </div>
  </div>
  <!-- end - main header -->
</header>
<!-- END - Header -->

<script>
  import { cartCount } from "@/stores/cart";

  // Listen to changes in the store, and show/hide the dialog accordingly
  function updateCartCount(count) {
    const cartCountElem = document.getElementById("cartCount");
    if (cartCountElem) {
      if (count > 0) {
        cartCountElem.style.display = "inline-flex";
        cartCountElem.textContent = count.toString();
      } else {
        cartCountElem.style.display = "none";
        cartCountElem.textContent = "";
      }
    }
  }

  cartCount.subscribe((count) => {
    console.log("Cart count updated:", count);
    updateCartCount(count);
  });

  // Run once after Astro page rendered
  if (typeof window !== "undefined") {
    document.addEventListener("astro:page-load", () => {
      updateCartCount(cartCount.get());
    });
  }
</script>
