<!-- Scroll animations -->
<script>
  const initializeObserver = () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("scroll-animated");
        }
      });
    });

    const elements = document.querySelectorAll(
      ".scroll-animation [data-scroll-animate]"
    );

    elements.forEach((element) => {
      observer.observe(element);
    });
  };

  document.addEventListener("DOMContentLoaded", () => {
    initializeObserver();
  });

  document.addEventListener("astro:page-loaded", () => {
    initializeObserver();
  });

  document.addEventListener("astro:after-swap", () => {
    initializeObserver();
  });

  //currency update
  import { configStore } from "@/stores/config";

  function updateConfigDetails(config) {
    const currencyElem = document.querySelectorAll(".currency-symbol");
    console.log("Updating currency symbols to:", config.currencySymbol);

    if (config.currencySymbol && currencyElem.length) {
      currencyElem.forEach((el) => {
        el.innerHTML = config.currencySymbol;
      });
    }
  }

  //Listen changes
  configStore.subscribe(() => {
    console.log("Astro store config - subscribe triggered");
    updateConfigDetails(configStore.get());
  });

  // Run once after Astro page rendered
  if (typeof window !== "undefined") {
    document.addEventListener("astro:page-load", () => {
      console.log("Astro page loaded");
      updateConfigDetails(configStore.get());
    });
  }

  // Initial run on DOMContentLoaded
  document.addEventListener("DOMContentLoaded", () => {
    console.log("Astro page DOMContentLoaded");
    updateConfigDetails(configStore.get());
  });

  document.addEventListener("astro:after-swap", () => {
    console.log("Astro page after-swap");
    updateConfigDetails(configStore.get());
  });
</script>
