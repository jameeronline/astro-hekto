---
//astro imports
import { getCollection } from "astro:content";

//components import
import BaseLayout from "@/layouts/BaseLayout.astro";
import BlogLayout from "@/layouts/BlogLayout.astro";
import BlogCard from "@/blocks/BlogCard.astro";
import BlogGrid from "@/blocks/BlogGrid.astro";
import PageHeader from "@/blocks/PageHeader.astro";
import Paginate from "@/components/Paginate.astro";

//utils import
import { slugify } from "@/utils/helper";

//site config
import { siteConfig } from "@/config/siteconfig";

//page meta data
const pageTitle = "Latest Blog";

// Pagination setup
export async function getStaticPaths({ paginate }) {
  // Get all posts (you can add sorting/filtering here)
  const allPosts = await getCollection("posts");
  const { pageLength } = siteConfig;

  // Sort posts by date (newest first)
  const sortedPosts = allPosts.sort(
    (a, b) => new Date(b.data.pubDate) - new Date(a.data.pubDate)
  );

  return paginate(sortedPosts, {
    pageSize: 2, // Number of posts per page
  });
}

//props
const { page } = Astro.props;
const posts = page?.data;

// page header details
const pageHeader = {
  title: "Latest Blog",
  caption: "Blog",
  description: "",
};
---

<BlogLayout title={pageTitle}>
  <PageHeader headerInfo={pageHeader} slot="pageHeader" />

  {
    posts.length === 0 ? (
      <div class="empty-message">
        <p>No blog posts found.</p>
      </div>
    ) : (
      <BlogGrid posts={posts} />
    )
  }

  <Paginate
    currentPage={page.currentPage}
    lastPage={page.lastPage}
    prevUrl={page.url.prev}
    nextUrl={page.url.next}
  />
</BlogLayout>
