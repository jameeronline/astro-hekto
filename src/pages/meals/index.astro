---
//layout imports
import BaseLayout from "@/layouts/BaseLayout.astro";

//components import
import PageHeader from "@/components/blocks/PageHeader.astro";

// page header details
const pageHeader = {
  title: "Currency Exchange",
  caption: "",
  description: "",
};

//axios import
import axios from "axios";

//meals URL
const MEALS_API_URL = "https://www.themealdb.com/api/json/v1/1/list.php?c=list";

let meals = [];
let error = "";

try {
  const response = await axios.get(MEALS_API_URL);
  meals = response.data.meals || [];
} catch (err) {
  error = "Failed to fetch meals. Please try again later.";
  console.error(err.message);
}

//CURRENCY EXCHANGE API
const EXCHANGE_API_URL =
  "https://cdn.jsdelivr.net/npm/@fawazahmed0/currency-api@latest/v1/";

let currencies = [];
let currencyError = "";

try {
  const currencyResponse = await axios.get(
    `${EXCHANGE_API_URL}currencies.json`
  );
  currencies = currencyResponse.data || {};
} catch (err) {
  currencyError = "Failed to fetch currencies. Please try again later.";
  console.error(err.message);
}
---

<BaseLayout>
  <PageHeader headerInfo={pageHeader} slot="pageHeader" />
  <div class="container--default">
    <section>
      <div class="mb-8 flex flex-col sm:flex-row gap-10">
        <div class="flex-1">
          <label
            for="source-currency"
            class="block mb-2 font-bold text-lg text-gray-900"
            >Source Currency</label
          >
          <select
            id="source-currency"
            name="source-currency"
            class="form-select w-full border border-accent-300 rounded p-2 h-16 text-lg"
          >
            <option value="-1">Select Source Currency</option>
            {
              Object.entries(currencies).map(([code, name]) => (
                <option value={code}>
                  {code.toUpperCase()} - {name}
                </option>
              ))
            }
          </select>
        </div>
        <div class="flex-1">
          <label
            for="target-currency"
            class="block mb-2 font-bold text-lg text-gray-900"
            >Target Currency</label
          >
          <select
            id="target-currency"
            name="target-currency"
            class="w-full border border-accent-300 rounded p-2 h-16 text-lg"
          >
            <option value="-1">Select Target Currency</option>
            {
              Object.entries(currencies).map(([code, name]) => (
                <option value={code}>
                  {code.toUpperCase()} - {name}
                </option>
              ))
            }
          </select>
        </div>
      </div>
      {currencyError && <p class="text-red-600 mb-4">{currencyError}</p>}
      <div
        id="conversion-result"
        class="text-4xl text-center font-semibold text-green-700 mb-4"
      >
      </div>
    </section>

    <h1 class="text-4xl font-bold mb-8">Meals</h1>
    {
      error ? (
        <p class="text-red-600">{error}</p>
      ) : meals.length === 0 ? (
        <p>No meals found.</p>
      ) : (
        <ul class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
          {meals.map((meal) => (
            <li
              class="bg-white rounded-lg shadow p-4 flex flex-col items-center"
              key={meal.idMeal}
            >
              <img
                src={meal.strMealThumb}
                alt={meal.strMeal}
                class="w-40 h-40 object-cover rounded mb-4"
              />
              <h2 class="text-xl font-semibold mb-2">{meal.strMeal}</h2>
              <p class="text-gray-600">
                {meal.strArea} | {meal.strCategory}
              </p>
            </li>
          ))}
        </ul>
      )
    }
  </div>
</BaseLayout>

<script type="module" define:vars={{ currencies, currencyError }}>
  const sourceSelect = document.getElementById("source-currency");
  const targetSelect = document.getElementById("target-currency");
  let lastSource = sourceSelect?.value;
  let lastTarget = targetSelect?.value;

  console.log("Currencies loaded:", currencies);

  async function fetchConversionRate(source, target) {
    console.log(`Fetching rate from ${source} to ${target}`);
    if (!source || !target) return;
    try {
      const res = await fetch(
        `https://cdn.jsdelivr.net/npm/@fawazahmed0/currency-api@latest/v1/currencies/${source}.json`
      );
      const data = await res.json();
      const resultDiv = document.getElementById("conversion-result");
      if (resultDiv && data[source] && data[source][target]) {
        resultDiv.textContent = `1 ${source.toUpperCase()} (${currencies[source]}) = ${data[source][target]} ${target.toUpperCase()} (${currencies[target]})`;
      } else if (resultDiv) {
        resultDiv.textContent = "Conversion rate not available.";
      }
      //   alert(
      //     `1 ${source.toUpperCase()} = ${data[source][target]} ${target.toUpperCase()}`
      //   );
    } catch (err) {
      alert("Failed to fetch conversion rate.");
    }
  }

  sourceSelect?.addEventListener("change", (e) => {
    lastSource = e.target.value;
    if (lastSource !== "-1" && lastTarget !== "-1") {
      fetchConversionRate(lastSource, lastTarget);
    }
  });

  targetSelect?.addEventListener("change", (e) => {
    lastTarget = e.target.value;
    if (lastSource !== "-1" && lastTarget !== "-1") {
      fetchConversionRate(lastSource, lastTarget);
    }
  });
</script>
